version: '3.3'

networks:
    backend:
        driver: ${DRIVER_NETWORK_BACKEND}
    frontend:
        driver: ${DRIVER_NETWORK_FRONTEND}

volumes:
    postgres:
        driver: ${DRIVER_VOLUME_POSTGRES}

services:
    # PostgreSQL
    postgres:
        #restart: always
        image: postgres:${POSTGRES_VERSION}
        container_name: "postgres"
        volumes:
            - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
            - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        ports:
            - "${POSTGRES_PORT}:5432"
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - GITLAB_POSTGRES_INIT=${GITLAB_POSTGRES_INIT}
            - GITLAB_POSTGRES_USER=${GITLAB_POSTGRES_USER}
            - GITLAB_POSTGRES_PASSWORD=${GITLAB_POSTGRES_PASSWORD}
            - GITLAB_POSTGRES_DB=${GITLAB_POSTGRES_DB}
        networks:
            - backend
    # Redis
    redis:
        #restart: always
        image: redis:${REDIS_VERSION}
        container_name: "redis"
        volumes:
            - ${REDIS_DATA_PATH}:/data
            - ${REDIS_CONF_PATH}:/usr/local/etc/redis/redis.conf
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - backend
    # Traefik
    traefik:
        image: traefik:${TRAEFIK_VERSION}
        container_name: "traefik"
        command:
            - --api
            - --log.level=DEBUG
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.entrypoints=web"
            - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_MONITORING_HOST}`)"
            - "traefik.http.routers.traefik.middlewares=redirect@file"
            - "traefik.http.routers.traefik_secure.entrypoints=web-secure"
            - "traefik.http.routers.traefik_secure.rule=Host(`${TRAEFIK_MONITORING_HOST}`)"
            - "traefik.http.routers.traefik_secure.tls.certresolver=letsencrypt"
            - "traefik.http.routers.traefik_secure.service=api@internal"
            - "traefik.docker.network=${TRAEFIK_NETWORK}"
        ports:
            - "${TRAEFIK_SSH_PORT}:2222"
            - "${TRAEFIK_HTTP_PORT}:80"
            - "${TRAEFIK_WEB_UI_PORT}:8080"
            - "${TRAEFIK_HTTPS_PORT}:443"
        volumes:
            - ${TRAEFIK_HOST_DOCKER_SOCK}:/var/run/docker.sock
            - ${TRAEFIK_CONF_PATH}/traefik.toml:/etc/traefik/traefik.toml
            - ${TRAEFIK_CONF_PATH}/provider_file.toml:/etc/traefik/provider_file.toml
            - ${TRAEFIK_CONF_PATH}/acme.json:/acme.json
        networks:
            - frontend
            - backend
    # WhoAmI?
    whoami:
        image: "containous/whoami"
        container_name: "whoami"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.whoami.entrypoints=web"
            - "traefik.http.routers.whoami.rule=Host(`${WHOAMI_HOST}`)"
            - "traefik.http.routers.whoami.middlewares=redirect@file"
            - "traefik.http.routers.whoami_secure.entrypoints=web-secure"
            - "traefik.http.routers.whoami_secure.rule=Host(`${WHOAMI_HOST}`)"
            - "traefik.http.routers.whoami_secure.tls.certresolver=letsencrypt"
        depends_on:
            - traefik
        networks:
            - backend
